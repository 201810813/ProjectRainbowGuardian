//AltarScene.cpp
#include "pch.h"
#include "AltarScene.h"
#include "ConsoleLayout.h" // ÏΩòÏÜî Î†àÏù¥ÏïÑÏõÉ Í¥ÄÎ†®
#include "Player.h" // ÌîåÎ†àÏù¥Ïñ¥ Ï†ïÎ≥¥ Í¥ÄÎ¶¨
#include "SceneManager.h"
#include "KeyManager.h" // ÌÇ§ ÏûÖÎ†• Ï≤òÎ¶¨ Í¥ÄÎ†® Ï∂îÍ∞Ä
#include "SoundManager.h"

#include <sstream>

AltarScene::AltarScene()
    :RecurveryOnce(false)
{
	CursorPos = 0;
}

AltarScene::~AltarScene() {
}

void AltarScene::makeLayout(){
    
    // Title Layout (Ï†úÎã® Ï†úÎ™© ÏÑ§Ï†ï)
    WriteManager::GetInstance()->MakeLayout(LAYOUT_TYPE::TITLE, 0, 0, 1, 119);
    WriteManager::GetInstance()->AddLine(FMessageParam(LAYOUT_TYPE::TITLE, "Ï†úÎã®", false, 0, TEXT_COLOR_TYPE::BLACK, BACKGROUND_COLOR_TYPE::WHITE));

    // Stat Layout
    WriteManager::GetInstance()->MakeLayout(LAYOUT_TYPE::STAT, 0, 2, 9, 25);

    // Map Layout
    WriteManager::GetInstance()->MakeLayout(LAYOUT_TYPE::MAP, 104, 2, 9, 8);
    string output = "";
    if (GetFloorNumber() < 10)
    {
        output += "0";
    }
    output += to_string(GetFloorNumber());
    output += " [‚õ≤]";
    int idx = 8 - (GetFloorNumber() % 9);
    WriteManager::GetInstance()->AddLine(FMessageParam(LAYOUT_TYPE::MAP, output, false, idx, TEXT_COLOR_TYPE::GRAY));


    WriteManager::GetInstance()->MakeLayout(LAYOUT_TYPE::STORY, 0, 13, 9, 60);
    WriteManager::GetInstance()->AddLine(FMessageParam(LAYOUT_TYPE::STORY, "Ïñ¥ÎîîÏÑ†Í∞Ä ÏÑ±Ïä§Îü¨Ïö¥ Í∏∞Ïö¥Ïù¥ ÎäêÍª¥ÏßëÎãàÎã§...", true, 1, TEXT_COLOR_TYPE::SKY));
    WriteManager::GetInstance()->AddLine(FMessageParam(LAYOUT_TYPE::STORY, "Í≥®Îìú 100ÏùÑ Î¥âÏñëÌïòÎ©¥ ÏµúÎåÄ Ï≤¥Î†•ÏúºÎ°ú ÌöåÎ≥µÎê©ÎãàÎã§.", true, 2, TEXT_COLOR_TYPE::SKY_INENSITY));

    // BACKGROUND
    WriteManager::GetInstance()->AddLine(FMessageParam(LAYOUT_TYPE::BACKGROUND, "‚¢ø‚£ø‚£ø‚£ø‚°ø      ‚¢ø‚£ø‚£ø‚£ø‚°ø                                             ‚¢ø‚£ø‚£ø‚£ø‚°ø      ‚¢ø‚£ø‚£ø‚£ø‚°ø", false, 0));
    WriteManager::GetInstance()->AddLine(FMessageParam(LAYOUT_TYPE::BACKGROUND, " ‚£ø‚£ø‚£ø        ‚£ø‚£ø‚£ø ‚†Ä‚†Ä     ‚†Ä  ‚†Ä  ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°¥‚†ã‚†≥‚°Ñ‚†Ä‚†Ä‚†Ä	                  ‚£ø‚£ø‚£ø        ‚£ø‚£ø‚£ø", false, 1));
    WriteManager::GetInstance()->AddLine(FMessageParam(LAYOUT_TYPE::BACKGROUND, " ‚£ø‚£ø‚£ø        ‚£ø‚£ø‚£ø‚†Ä‚†Ä      ‚†Ä ‚†Ä   ‚†Ä‚†Ä‚¢Ä‚£§‚£§‚£π‚£§‚£¥‚££‚£§‚£Ñ‚°Ä‚†Ä                    ‚£ø‚£ø‚£ø        ‚£ø‚£ø‚£ø", false, 2));
    WriteManager::GetInstance()->AddLine(FMessageParam(LAYOUT_TYPE::BACKGROUND, " ‚£ø‚£ø‚£ø        ‚£ø‚£ø‚£ø‚†Ä‚†Ä           ‚†Ä‚£†‚†û‚¢â‚°Ñ‚†Ä‚£ü‚†Ä‚†à‚°ß‚†Ä‚£Ä‚†ô‚¢¶‚°Ä                   ‚£ø‚£ø‚£ø        ‚£ø‚£ø‚£ø", false, 3));
    WriteManager::GetInstance()->AddLine(FMessageParam(LAYOUT_TYPE::BACKGROUND, " ‚£ø‚£ø‚£ø        ‚£ø‚£ø‚£ø‚†Ä          ‚†Ä‚†Ä‚†Ä‚†ô‚†∂‚¢Ø‚£§‚†Ñ‚£ó‚†Ä‚†Ä‚°Ø‚¢†‚£¨‚†∑‚†û‚†É‚†Ä‚†Ä                 ‚£ø‚£ø‚£ø        ‚£ø‚£ø‚£ø", false, 4));
    WriteManager::GetInstance()->AddLine(FMessageParam(LAYOUT_TYPE::BACKGROUND, " ‚£ø‚£ø‚£ø        ‚£ø‚£ø‚£ø‚†Ä‚†Ä        ‚†Ä  ‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†≥‚°ó‚†Ä‚†Ä‚¢ø‚†ö‚†Å‚†Ä‚†Ä                    ‚£ø‚£ø‚£ø        ‚£ø‚£ø‚£ø", false, 5));
    WriteManager::GetInstance()->AddLine(FMessageParam(LAYOUT_TYPE::BACKGROUND, " ‚£ø‚£ø‚£ø        ‚£ø‚£ø‚£ø‚†Ä‚†Ä     ‚†Ä  ‚†Ä‚†Ä    ‚†Ä‚†Ä‚£∏‚†Å‚†Ä‚†Ä‚†∏‚°Ü‚†Ä‚†Ä 	                  ‚£ø‚£ø‚£ø        ‚£ø‚£ø‚£ø", false, 6));
    WriteManager::GetInstance()->AddLine(FMessageParam(LAYOUT_TYPE::BACKGROUND, " ‚£ø‚£ø‚£ø        ‚£ø‚£ø‚£ø‚†Ä     ‚†Ä‚†Ä ‚†Ä    ‚†Ä‚†Ä‚†Ä‚¢Ä‚£è‚¢ò‚¢õ‚¢õ‚¢õ‚¢∑‚†Ä‚†Ä                    ‚†Ä‚£ø‚£ø‚£ø        ‚£ø‚£ø‚£ø", false, 7));
    WriteManager::GetInstance()->AddLine(FMessageParam(LAYOUT_TYPE::BACKGROUND, "‚£æ‚£ø‚£ø‚£ø‚£∑      ‚£æ‚£ø‚£ø‚£ø‚£∑‚†Ä     ‚†Ä‚†Ä‚†Ä‚†Ä    ‚†Ä‚†Ä‚£è‚£â‚£â‚£â‚£â‚£â‚£â‚°á                     ‚£æ‚£ø‚£ø‚£ø‚£∑      ‚£æ‚£ø‚£ø‚£ø‚£∑", false, 8));

    // ÏÑ†ÌÉùÏßÄ Ï∂îÍ∞Ä
    WriteManager::GetInstance()->MakeLayout(LAYOUT_TYPE::SELECT, 0, 24, 5, 60);
    UpdateSelectLayout();

    WriteManager::GetInstance()->MakeLayout(LAYOUT_TYPE::DRAW, 61, 13, 16, 58);

}

void AltarScene::begin() {
    SoundManager::GetInstance()->PlayMusic("AltarEnter", 1, 0.5, true);
    WriteManager::GetInstance()->ClearLayoutAllMessage(LAYOUT_TYPE::MONSTER_STAT_UI);
    WriteManager::GetInstance()->ClearLayout(LAYOUT_TYPE::MONSTER_STAT_UI);
    makeLayout();
}

void AltarScene::tick()
{
    UpdateStatLayout();

    if (IS_TAP(UP)) // Ïª§ÏÑúÎ•º ÏúÑÎ°ú Ïù¥Îèô
    {
        SoundManager::GetInstance()->PlayMusic("SelectCursor", 1, 1.f, true);
        CursorPos = (CursorPos > 0) ? CursorPos - 1 : 1; // 0ÏóêÏÑú 1Î°ú ÏàúÌôò
        WriteManager::GetInstance()->ClearLayoutAllMessage(LAYOUT_TYPE::SELECT);
    }
    else if (IS_TAP(DOWN)) // Ïª§ÏÑúÎ•º ÏïÑÎûòÎ°ú Ïù¥Îèô
    {
        SoundManager::GetInstance()->PlayMusic("SelectCursor", 1, 1.f, true);
        CursorPos = (CursorPos < 1) ? CursorPos + 1 : 0; // 1ÏóêÏÑú 0ÏúºÎ°ú ÏàúÌôò
        WriteManager::GetInstance()->ClearLayoutAllMessage(LAYOUT_TYPE::SELECT);
    }

    if (IS_TAP(ENTER)) // ÏÑ†ÌÉù ÌôïÏ†ï
    {
        SoundManager::GetInstance()->PlayMusic("MoveCursor", 1, 0.06f, true);
        if (CursorPos == 0) // Î¥âÏñë
        {
            handleOffer();
        }
        else if (CursorPos == 1) // ÎÇòÍ∞ÄÍ∏∞
        {
            handleExit();
        }
    }

    UpdateSelectLayout();
}

void AltarScene::handleOffer()
{
	if (!RecurveryOnce) // 100Í≥®Îìú ÏÜåÎ™®
	{
        if (Player::getInstance()->SpendGold(100))
        {
			SoundManager::GetInstance()->PlayMusic("UseCoin_0", 1, 0.6f, true);
            SoundManager::GetInstance()->PlayMusic("Holy_Spell", 1, 0.1f, true);
            Player::getInstance()->SetCurrentHP(Player::getInstance()->GetMaxHP()); // ÏµúÎåÄ Ï≤¥Î†•ÏúºÎ°ú ÌöåÎ≥µ
            WriteManager::GetInstance()->AddLine(FMessageParam(LAYOUT_TYPE::STORY, "ÏÑ±Ïä§Îü¨Ïö¥ Í∏∞Ïö¥Ïù¥ ÎãπÏã†ÏùÑ Í∞êÏã∏ Ï≤¥Î†•Ïù¥ Î™®Îëê ÌöåÎ≥µÎêòÏóàÏäµÎãàÎã§.", true, 3, TEXT_COLOR_TYPE::WHITE));
        }
        else
        {
            WriteManager::GetInstance()->AddLine(FMessageParam(LAYOUT_TYPE::STORY, "Ïñ¥ÎîîÏÑ†Í∞Ä ÏïàÌÉÄÍπåÏõåÌïòÎäî ÏãúÏÑ†Ïù¥ ÎäêÍª¥ÏßÄÎäî Í≤ÉÎßå Í∞ôÍµ∞Ïöî..", true, 3, TEXT_COLOR_TYPE::WHITE));
        }
		RecurveryOnce = true;
	}
	else
	{
		WriteManager::GetInstance()->AddLine(FMessageParam(LAYOUT_TYPE::STORY, "Îçî Ïù¥ÏÉÅ Ïó¨Ïã†ÏÉÅÏù¥ Î∞òÏùëÌïòÏßÄ ÏïäÏäµÎãàÎã§.", true, 3, TEXT_COLOR_TYPE::WHITE));
	}
}

void AltarScene::handleExit() // ÎÇòÍ∞ÄÍ∏∞
{
    SceneManager::GetInstance()->CacheChangeScene(SCENE_TYPE::RANDOM);
}

void AltarScene::UpdateSelectLayout()
{
    if (CursorPos == 0)
    {
        WriteManager::GetInstance()->AddLine(FMessageParam(LAYOUT_TYPE::SELECT, "  > [1. Î¥âÏñëÌïòÍ∏∞]", false, 0, TEXT_COLOR_TYPE::WHITE));
        WriteManager::GetInstance()->AddLine(FMessageParam(LAYOUT_TYPE::SELECT, "     [2. ÎÇòÍ∞ÄÍ∏∞]", false, 1, TEXT_COLOR_TYPE::WHITE));
    }
    else if (CursorPos == 1)
    {
        WriteManager::GetInstance()->AddLine(FMessageParam(LAYOUT_TYPE::SELECT, "     [1. Î¥âÏñëÌïòÍ∏∞]", false, 0, TEXT_COLOR_TYPE::WHITE));
        WriteManager::GetInstance()->AddLine(FMessageParam(LAYOUT_TYPE::SELECT, "  > [2. ÎÇòÍ∞ÄÍ∏∞]", false, 1, TEXT_COLOR_TYPE::WHITE));
    }
}

void AltarScene::UpdateStatLayout()
{
    std::ostringstream oss;
    Player::getInstance()->GetDamage();
    Player::getInstance()->GetCurrentHP();

    WriteManager::GetInstance()->AddLine(FMessageParam(LAYOUT_TYPE::STAT, "Ïª¨Îü¨", false, 0, TEXT_COLOR_TYPE::WHITE, BACKGROUND_COLOR_TYPE::BLACK));
    WriteManager::GetInstance()->AddLine(FMessageParam(LAYOUT_TYPE::STAT, "========================", false, 1, TEXT_COLOR_TYPE::WHITE, BACKGROUND_COLOR_TYPE::BLACK));

    oss.str("");
    oss.clear();
    oss << "‚ùáÔ∏è Î†àÎ≤®     : " << Player::getInstance()->GetLevel();
    WriteManager::GetInstance()->AddLine(FMessageParam(LAYOUT_TYPE::STAT, oss.str(), false, 2, TEXT_COLOR_TYPE::SKY, BACKGROUND_COLOR_TYPE::BLACK));

    oss.str("");
    oss.clear();
    oss << "‚ö° EXP      : " << Player::getInstance()->GetCurrentExp() << " / " << Player::getInstance()->GetMaxExp();
    WriteManager::GetInstance()->AddLine(FMessageParam(LAYOUT_TYPE::STAT, oss.str(), false, 3, TEXT_COLOR_TYPE::SKY));

    oss.str("");
    oss.clear();
    oss << "ü©∏ HP       : " << (int)floor(Player::getInstance()->GetCurrentHP()) << " / " << (int)floor(Player::getInstance()->GetMaxHP());
    WriteManager::GetInstance()->AddLine(FMessageParam(LAYOUT_TYPE::STAT, oss.str(), false, 4, TEXT_COLOR_TYPE::GREEN));

    oss.str("");
    oss.clear();
    oss << "üó°Ô∏è ATK      : " << (int)floor(Player::getInstance()->GetDamage());

    if (Player::getInstance()->Is_PowerUp())
    {
        oss << " + " << Player::getInstance()->GetAddDamage();
    }

    WriteManager::GetInstance()->AddLine(FMessageParam(LAYOUT_TYPE::STAT, oss.str(), false, 5, TEXT_COLOR_TYPE::RED));

    oss.str("");
    oss.clear();
    oss << "üõ°Ô∏è DEF      : " << (int)floor(Player::getInstance()->GetDefense());
    WriteManager::GetInstance()->AddLine(FMessageParam(LAYOUT_TYPE::STAT, oss.str(), false, 6, TEXT_COLOR_TYPE::BLUE_INENSITY));

    oss.str("");
    oss.clear();
    oss << "üçÄ LUK      : " << (int)floor(Player::getInstance()->GetEvasion()) << "%";
    WriteManager::GetInstance()->AddLine(FMessageParam(LAYOUT_TYPE::STAT, oss.str(), false, 7, TEXT_COLOR_TYPE::ORANGE));

    oss.str("");
    oss.clear();
    oss << "üí∞ GOLD     : " << (int)floor(Player::getInstance()->GetCoin());
    WriteManager::GetInstance()->AddLine(FMessageParam(LAYOUT_TYPE::STAT, oss.str(), false, 8, TEXT_COLOR_TYPE::ORANGE_INENSITY));
}
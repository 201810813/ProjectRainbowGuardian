#include "pch.h"
#include "EletricMantis.h"


EletricMantis::EletricMantis()
{
	playerLevel = Player::getInstance()->GetLevel();
	RandomManager::GetInstance()->setRange(20, 30);
	double  Hp = double(playerLevel * RandomManager::GetInstance()->getRandom<int>() + (4 *playerLevel));
	RandomManager::GetInstance()->setRange(5, 7);
	double  damage = double(playerLevel * RandomManager::GetInstance()->getRandom<int>() + (2* playerLevel));
	int		def = playerLevel * 2;
					//Ïù¥Î¶Ñ    hp  maxhp  damage   def  skd   eva drop exp  coin
	MantisStat = { "ü¶óÏ†ÑÍ∏∞ÏÇ¨ÎßàÍ∑Äü¶ó",Hp,Hp,damage,def,1.4,20,30,13,20};
	dropItems[HEALTH_POTION] = MantisStat.dropRate;
	dropItems[POWER_POTION] = MantisStat.dropRate;
	bDead = false;
	
}

EletricMantis::~EletricMantis() {}

void EletricMantis::Begin()
{
	CreateAnimations();
	Monster::animator->Play("Idle", true);
}

void EletricMantis::Tick()
{
	Monster::Tick();
	if (bDead == false && Monster::animator->isCurAnimEnd()) {
		Monster::animator->Play("Idle", true);
	}
}

void EletricMantis::CreateAnimations()
{
	vector<string> VecAnim01;
	VecAnim01.push_back("");
	VecAnim01.push_back("");
	VecAnim01.push_back("");
	VecAnim01.push_back("");
	VecAnim01.push_back("");
	VecAnim01.push_back("");
	VecAnim01.push_back("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚†Ä‚†Ä‚£§‚£õ‚¢ß‚£Ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£†‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
	VecAnim01.push_back("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£¥‚£Ø‚¢ª‚°º‚££‚¢Ø‚£ü‚°ø‚£º‚£Ñ‚†Ä‚†Ä‚†Ä‚¢Ä‚£Ä‚†ñ‚£Ω‚†Ü‚†Ä‚†Ä‚£Ä‚¢î‚°É‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
	VecAnim01.push_back("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°û‚¢ø‚£ª‚¢∑‚£π‚¢≥‚£ü‚£æ‚¢ª‚£Ω‚£ª‚°Ü‚†Ä‚¢®‚£ú‚£§‚£ø‚£ª‚£Ä‚†ñ‚£ã‚°¥‚†ã‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
	VecAnim01.push_back("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£Ä‚£Ä‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°ø‚£Ø‚¢ü‚£Ø‚†∑‚£Ø‚†õ‚°Ç‚£Ω‚£ø‚£á‚£á‚°¥‚£Ø‚£æ‚¢ø‚£ã‚£•‚†û‚°ª‚†é‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
	VecAnim01.push_back("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚¢†‚†•‚£ç‚¢ì‚†¶‚°Ä‚†Ä‚†Ä‚†Ä‚°ø‚°ø‚°¶‚†ò‚°ü‚†Ä‚¢Ç‚°µ‚£Ω‚£ø‚¢ª‚£≠‚¢ø‚£ú‚°∂‚¢Ø‚¢≠‚°í‚°≠‚†û‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
	VecAnim01.push_back("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚¢é‚¢Ω‚°â‚†ô‚†∫‚£ù‚¢¶‚°Ä‚†Ä‚†ë‚†Å‚¢≥‚£Ü‚°•‚¢¢‚¢û‚£¥‚†ò‚°ß‚¢ª‚£º‚¢∑‚£´‚£û‚£≥‚†é‚†õ‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
	VecAnim01.push_back("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ò‚¢é‚†¶‚†Ä‚†Ä‚£®‚¢£‚¢ß‚£Ñ‚°Ñ‚£†‚£é‚†æ‚¢ø‚†æ‚£ø‚¢ø‚£Ä‚°∑‚£û‚£ø‚£Ç‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
	VecAnim01.push_back("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ô‚†É‚†à‚†É‚†õ‚¢Ø‚£ø‚£ª‚°§‚£¨‚¢Ä‚†Ä‚†Ä‚¢ø‚†ª‚£Ω‚£´‚°è‚†∏‚£ü‚£ß‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
	VecAnim01.push_back("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£ô‚†≥‚£ü‚£∑‚£è‚¢∂‚¢£‚†Ä‚†Ä‚†Å‚†â‚†Ä‚†Ä‚†à‚¢∑‚£ª‚¢¶‚£Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
	VecAnim01.push_back("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†¥‚†Ø‚†¥‚†ø‚†ø‚†æ‚†è‚†ö‚†õ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚††‚†æ‚†¥‚†Ø‚†ø‚†ß‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");

	vector<string> VecAnim02;
	VecAnim02.push_back("");
	VecAnim02.push_back("");
	VecAnim02.push_back("");
	VecAnim02.push_back("");
	VecAnim02.push_back("");
	VecAnim02.push_back("");
	VecAnim02.push_back("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚°∂‚£§‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
	VecAnim02.push_back("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£†‚¢∂‚££‚°¥‚£è‚°∑‚£∑‚¢ø‚£¢‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚°§‚£ª‚†Ü‚†Ä‚†Ä‚†Ä‚°†‚†Ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
	VecAnim02.push_back("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°º‚£ø‚¢ø‚£∂‚°π‚£û‚°Ω‚£Ø‚£ü‚£Ø‚¢ø‚°Ñ‚†Ä‚¢Ä‚°º‚£ã‚£¥‚°ø‚¢Å‚°§‚†ñ‚£©‚†ú‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
	VecAnim02.push_back("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£∑‚£û‚°ø‚£û‚°µ‚£Ø‚†ü‚†á‚£º‚£ø‚°è‚°á‚£†‚£û‚£µ‚£ø‚†∑‚£õ‚°≠‚¢∂‚°ù‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
	VecAnim02.push_back("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚¢â‚£ã‚°í‚†¶‚£Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚£∑‚£ø‚£å‚†π‚°ª‚†°‚†å‚¢™‚£π‚£ø‚°ø‚£õ‚£∑‚°π‚£≠‚£û‚£õ‚†≠‚¢í‚°µ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
	VecAnim02.push_back("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ò‚°ú‚£≤‚†õ‚†∫‚¢¥‚°≥‚£Ñ‚†Ä‚†Ä‚†£‚†É‚¢ß‚°Ñ‚£É‚†Ñ‚£ú‚££‚†π‚£è‚¢º‚£ª‚£º‚†ü‚°µ‚¢Æ‚£ú‚†æ‚†â‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
	VecAnim02.push_back("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†±‚°ú‚°á‚†Ä‚†Ä‚¢ô‚£é‚£á‚¢Ä‚°Ä‚¢Ä‚°ú‚£π‚°∑‚£º‚£æ‚£ø‚†Å‚£è‚°º‚£ø‚†å‚†â‚†â‚†â‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
	VecAnim02.push_back("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†π‚†Ü‚†ê‚†≥‚†∫‚£º‚°ø‚£ß‚°ç‚£ö‚†Å‚†É‚†Ä‚£ø‚¢æ‚°ø‚£ù‚°ø‚¢π‚£∑‚£Ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
	VecAnim02.push_back("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚£ø‚†∑‚£ª‚£Ø‚£ñ‚°§‚£Ñ‚†à‚†Ä‚†õ‚†ô‚†É‚†Ä‚†ò‚¢Ø‚¢ø‚£¶‚£Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
	VecAnim02.push_back("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†¥‚†Ø‚†¥‚†ø‚†∑‚†Ø‚†ó‚†Ω‚†æ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚††‚†Æ‚†µ‚†Æ‚†ø‚†ß‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");

	vector<vector<string>> AnimInfo;
	AnimInfo.push_back(VecAnim01);
	AnimInfo.push_back(VecAnim02);
	Monster::animator->CreateAnimation("Idle", AnimInfo, 2, 0.15f);

	vector<string> VecAnim03;
	VecAnim03.push_back("");
	VecAnim03.push_back("");
	VecAnim03.push_back("");
	VecAnim03.push_back("");
	VecAnim03.push_back("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚°†‚¢§‚°ñ‚°∂‚†í‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
	VecAnim03.push_back("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°†‚¢ö‚£•‚£ö‚£≥‚£é‚†µ‚£ã‚°ø‚¢Æ‚£Ω‚£§‚°§‚¢Ñ‚£Ä‚£Ä‚£Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
	VecAnim03.push_back("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚†û‚†ò‚¢â‚£†‚†û‚°Ω‚£π‚¢æ‚£Ω‚°ª‚¢Ø‚°∑‚¢ø‚£π‚£æ‚£ù‚°ö‚°ú‚£Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
	VecAnim03.push_back("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚†¶‚†∂‚£ú‚£©‚†∂‚¢ø‚°π‚£≠‚£ü‚¢ß‚°ü‚£≠‚°õ‚£∑‚£ª‚¢Ø‚£ü‚°ø‚£ø‚£º‚£Ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
	VecAnim03.push_back("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚†î‚£•‚£û‚°ù‚†ä‚£Å‚†û‚£•‚°ü‚£Ω‚†û‚†´‚†ö‚°Å‚†å‚££‚£Ω‚£ß‚¢ª‚£ø‚†è‚†É‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
	VecAnim03.push_back("‚†Ä‚†Ä‚†Ä‚¢Ä‚¢î‚°µ‚†õ‚†Å‚†Ä‚†Ä‚†Ä‚†ô‚†™‚¢ç‚¢ô‚¢¶‚°å‚††‚†É‚£º‚¢π‚°Ü‚¢ô‚£´‚£æ‚£ø‚£ø‚£∂‚°¶‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
	VecAnim03.push_back("‚†Ä‚†Ä‚†Ä‚†ä‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†â‚¢â‚£Ø‚†Ñ‚°û‚£°‚£æ‚£∂‚£ø‚£ø‚†ü‚†ó‚†â‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
	VecAnim03.push_back("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£Ä‚†§‚†§‚£§‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚°û‚£†‚£æ‚†Ω‚†õ‚†ª‚†ø‚¢â‚£Ä‚¢§‚°º‚°∑‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
	VecAnim03.push_back("‚†Ä‚†Ä‚£Ñ‚¢¢‚£π‚°¥‚†û‚†∂‚¢ß‚££‚¢Ä‚°Ä‚£§‚†¥‚£û‚†æ‚°ø‚¢≤‚°Ü‚†Ä‚†Ä‚†Ä‚£ò‚£Ø‚°ø‚£Ω‚°Ñ‚†ê‚†Ä‚¢Ä‚¢†‚¢Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
	VecAnim03.push_back("‚††‚£É‚†¥‚£´‚†Å‚†Ä‚†Ä‚¢Ä‚°¨‚£≥‚¢Æ‚£Ω‚¢Æ‚°ø‚°ù‚†≥‚†õ‚¢≥‚£É‚°ø‚£¶‚°ø‚°Ω‚°á‚¢ø‚°è‚†Ä‚†Ä‚†Ä‚†Ä‚†æ‚£ü‚£∂‚£§‚£Ä‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
	VecAnim03.push_back("‚†Ä‚†à‚†í‚†Ω‚£≥‚£∂‚°Ñ‚†à‚†Å‚†Å‚†Ä‚†à‚†õ‚†â‚†Ä‚†Ä‚†Ä‚†∫‚†ø‚†ô‚†Å‚†Å‚†Ä‚†à‚¢Æ‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†à‚†ã‚°ü‚£ø‚†ü‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
	VecAnim03.push_back("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚††‚†æ‚†æ‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");

	AnimInfo.clear();
	AnimInfo.push_back(VecAnim03);
	Monster::animator->CreateAnimation("Attack", AnimInfo, 1, 0.25f);

	vector<string> VecAnim04;
	VecAnim04.push_back("");
	VecAnim04.push_back("");
	VecAnim04.push_back("");
	VecAnim04.push_back("");
	VecAnim04.push_back("");
	VecAnim04.push_back("");
	VecAnim04.push_back("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚£†‚£Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
	VecAnim04.push_back("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£†‚£¥‚£æ‚¢Ø‚£ó‚°Æ‚¢∑‚£¥‚°æ‚£¶‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
	VecAnim04.push_back("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£†‚°∫‚¢õ‚£â‚°•‚¢§‚°Ñ‚°ø‚£ù‚£´‚¢∑‚£ª‚£ø‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
	VecAnim04.push_back("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£†‚¢Æ‚£±‚¢ø‚£´‚£ø‚°±‚£∞‚£ü‚°Ω‚†û‚£°‚£ü‚†É‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
	VecAnim04.push_back("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£Ä‚°§‚£§‚¢ü‚°ö‚¢ø‚°≥‚£Ω‚¢û‚°µ‚£∑‚£û‚¢£‚£Ç‚¢µ‚£ø‚†É‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
	VecAnim04.push_back("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£†‚¢ü‚£≠‚°∑‚£é‚†ü‚†â‚¢â‚£∑‚°ç‚£ø‚£∑‚£π‚£Ø‚¢∑‚°å‚¢æ‚°ã‚††‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
	VecAnim04.push_back("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£û‚£π‚†º‚£Ø‚£æ‚†ù‚†Å‚†Ä‚†Ä‚£ø‚£¨‚°∑‚°å‚£ü‚£¶‚¢ª‚£ü‚£ø‚¢∑‚†ø‚¢Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
	VecAnim04.push_back("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†â‚†É‚†Ä‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚¢∞‚£ü‚°æ‚¢â‚°ø‚£∂‚¢ø‚££‚†∏‚£ø‚†Ç‚†ê‚†æ‚£Ö‚£Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
	VecAnim04.push_back("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£Ä‚†§‚£ø‚¢æ‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†ô‚¢¶‚°π‚°Ä‚†Ä‚†Ä‚†õ‚¢ø‚£≥‚£§‚£Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
	VecAnim04.push_back("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†¥‚†Ø‚†¥‚†ø‚†Ø‚†ø‚†á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†â‚†ö‚†Ç‚†Ä‚††‚†æ‚†¥‚†æ‚†Ø‚†ó‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");

	AnimInfo.clear();
	AnimInfo.push_back(VecAnim04);
	Monster::animator->CreateAnimation("GetAttack", AnimInfo, 1, 0.25f);
	
	vector<string> VecAnim05;
	VecAnim05.push_back("");
	VecAnim05.push_back("");
	VecAnim05.push_back("");
	VecAnim05.push_back("");
	VecAnim05.push_back("");
	VecAnim05.push_back("");
	VecAnim05.push_back("");
	VecAnim05.push_back("");
	VecAnim05.push_back("");
	VecAnim05.push_back("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
	VecAnim05.push_back("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£¥‚£ª‚°ø‚£ø‚¢∂‚£§‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
	VecAnim05.push_back("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£Ä‚°ü‚°∂‚£Ø‚£ü‚£Ø‚¢ø‚°ª‚†Ω‚£Ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
	VecAnim05.push_back("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£¥‚£Ø‚£ù‚°≥‚£Ω‚°æ‚£ø‚°ê‚£ã‚£æ‚¢∏‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
	VecAnim05.push_back("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†∞‚£≠‚†õ‚£ø‚¢æ‚°Ω‚£∂‚£ª‚†ß‚¢∞‚°É‚¢ª‚°±‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
	VecAnim05.push_back("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ò‚£Ø‚£ø‚£ø‚°ì‚£è‚¢ß‚°ê‚°ô‚¢§‚£ì‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
	VecAnim05.push_back("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ò‚†ß‚†ù‚†Ä‚†õ‚†º‚†ß‚†ø‚†Ω‚†∂‚†ã‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");

	AnimInfo.clear();
	AnimInfo.push_back(VecAnim05);
	Monster::animator->CreateAnimation("Die", AnimInfo, 1, 0.25f);
}


double EletricMantis::UseSkill()
{
	WriteManager::GetInstance()->AddLine(FMessageParam(LAYOUT_TYPE::STORY, GetName() + "Í∞Ä Ïä§ÌÇ¨ÏùÑ ÏÇ¨Ïö©Ìï©ÎãàÎã§!!!!", true, 0, TEXT_COLOR_TYPE::RED_INENSITY));
	return GetDamage() * GetSkillDamage();
}

void EletricMantis::Attack()
{
	Monster::animator->Play("Attack", false);
	//Ïä§ÌÇ¨ Ïì∏ÌôïÎ•†
	int skillProbability = 10;
	RandomManager::GetInstance()->setRange(0, 100);
	double Trigger = double(playerLevel * RandomManager::GetInstance()->getRandom<int>());
	//Ïä§ÌÇ¨ÏùÑ Ïì∞Î©¥

	if (Trigger < skillProbability) {
		double	damage = UseSkill() - Player::getInstance()->GetDefense();
		int		probability = Player::getInstance()->GetEvasion();
		int		trigger = rand() % 100;
		if (probability < trigger) {
			Player::getInstance()->GetAttack(damage);
			WriteManager::GetInstance()->AddLine(FMessageParam(LAYOUT_TYPE::STORY, "Ïä§ÌÇ¨ Í≥µÍ≤© ÌûàÌä∏!", true, 0, TEXT_COLOR_TYPE::RED_INENSITY));
			WriteManager::GetInstance()->AddLine(FMessageParam(LAYOUT_TYPE::STORY, "Îç∞ÎØ∏ÏßÄ " + to_string(int(damage)) + "Î∞õÏïòÏäµÎãàÎã§!!!.", true, 0, TEXT_COLOR_TYPE::RED));
		}
		else {
			WriteManager::GetInstance()->AddLine(FMessageParam(LAYOUT_TYPE::STORY, "Ï†ÅÏùò Ïä§ÌÇ¨ Í≥µÍ≤©ÏùÑ ÌöåÌîºÌñàÏäµÎãàÎã§.", true, 0, TEXT_COLOR_TYPE::RED_INENSITY));
		}
	}
	//Ïä§ÌÇ¨ÏùÑ ÏïÑÎãà Ïì∞Î©¥
	else {
		double	damage = GetDamage() - Player::getInstance()->GetDefense();
		int		probability = Player::getInstance()->GetEvasion();
		int		trigger = rand() % 100;
		if (probability < trigger) {
			Player::getInstance()->GetAttack(damage);
			WriteManager::GetInstance()->AddLine(FMessageParam(LAYOUT_TYPE::STORY, "ÏùºÎ∞ò Í≥µÍ≤© ÌûàÌä∏! ", true, 0, TEXT_COLOR_TYPE::RED_INENSITY));
			WriteManager::GetInstance()->AddLine(FMessageParam(LAYOUT_TYPE::STORY, "Îç∞ÎØ∏ÏßÄ " + to_string(int(damage)) + "Î∞õÏïòÏäµÎãàÎã§!.", true, 0, TEXT_COLOR_TYPE::RED));
		}
		else { WriteManager::GetInstance()->AddLine(FMessageParam(LAYOUT_TYPE::STORY, "Ï†ÅÏùò ÏùºÎ∞ò Í≥µÍ≤©ÏùÑ ÌöåÌîºÌñàÏäµÎãàÎã§.", true, 0, TEXT_COLOR_TYPE::RED_INENSITY)); }
	}

}

void EletricMantis::GetAttack()
{
	Monster::animator->Play("GetAttack", false);
	double damage = Player::getInstance()->GetDamage() - GetDefense();
	SetCurrentHP(GetCurrentHP() - damage);
	if (GetCurrentHP() <= 0) {
		SetCurrentHP(0);
	}
}

void EletricMantis::DropItem() {
	for (const auto& item : dropItems) {
		RandomManager::GetInstance()->setRange(0, 100);  // 0.0 ~ 1.0 ÏÇ¨Ïù¥Ïùò ÎûúÎç§ Í∞í
		int randomChance = RandomManager::GetInstance()->getRandom<double>();
		if (randomChance <= item.second) {  // ÌôïÎ•†Ïóê ÎßûÎäî ÏïÑÏù¥ÌÖú ÎìúÎ°≠
			if (item.first == HEALTH_POTION) {
				WriteManager::GetInstance()->AddLine(FMessageParam(LAYOUT_TYPE::STORY, "Ï≤¥Î†• Ìè¨ÏÖòÏù¥ ÎìúÎûçÎêòÏóàÏäµÎãàÎã§.", true, 0, TEXT_COLOR_TYPE::GREEN));
				Player::getInstance()->AddItemToInventory(HEALTH_POTION);
			}
			else if (item.first == POWER_POTION) {
				WriteManager::GetInstance()->AddLine(FMessageParam(LAYOUT_TYPE::STORY, "ÌååÏõå Ìè¨ÏÖòÏù¥ ÎìúÎûçÎêòÏóàÏäµÎãàÎã§.", true, 0, TEXT_COLOR_TYPE::GREEN));
				Player::getInstance()->AddItemToInventory(POWER_POTION);
			}
		}
	}
}


bool EletricMantis::is_Die()
{
	if (GetCurrentHP() <= 0) {
		Monster::animator->Play("Die", false);
		WriteManager::GetInstance()->AddLine(FMessageParam(LAYOUT_TYPE::STORY, "ÎãπÏã†Ïù¥" + GetName() + "Î•º Ïì∞Îü¨Ìä∏Î†∏ÏäµÎãàÎã§!", true, 0, TEXT_COLOR_TYPE::BLUE));
		DropItem();
		bDead = true;
		return bDead;
	}
	return bDead;
}



//---------------------------------
//           GetÌï®Ïàò
//---------------------------------
const string EletricMantis::GetName()
{
	return MantisStat.name;
}
const double EletricMantis::GetCurrentHP()
{
	return MantisStat.currentHp;
}
const double EletricMantis::GetMaxHP()
{
	return MantisStat.maxHp;
}
const double EletricMantis::GetDropRate()
{
	return MantisStat.dropRate;
}

const bool EletricMantis::GetbDead()
{
	return bDead;
}

const int EletricMantis::GetCoin()
{
	return MantisStat.coin;
}
const int EletricMantis::GetDefense()
{
	return MantisStat.defense;
}
const int EletricMantis::GetExp()
{
	return MantisStat.exp;
}
const int EletricMantis::GetEvasion()
{
	return MantisStat.evasion;
}

const double EletricMantis::GetSkillDamage()
{
	return MantisStat.skillDamage;
}

const double EletricMantis::GetDamage()
{
	return MantisStat.damage;
}
//-----------------------------//
//          SetÌï®Ïàò            //
//-----------------------------//

void EletricMantis::SetCurrentHP(double hp)
{
	MantisStat.currentHp = hp;
}




#include "pch.h"
#include "IronGolem.h"


IronGolem::IronGolem()
{
	playerLevel = Player::getInstance()->GetLevel();
	RandomManager::GetInstance()->setRange(20, 30);
	double  Hp = double(playerLevel * RandomManager::GetInstance()->getRandom<int>())+(1*playerLevel);
	RandomManager::GetInstance()->setRange(5, 7);
	double  damage = double(playerLevel * RandomManager::GetInstance()->getRandom<int>())+ (1* playerLevel);
	int		def = playerLevel * 1;
	//Ïù¥Î¶Ñ    hp  maxhp  damage   def  skd   eva drop exp  coin
	GolemStat = { "ü¶øÏïÑÏù¥Ïñ∏ Í≥®Î†òü¶ø", Hp, Hp, damage, def, 1.4, 20, 30, 15, 20 };
	dropItems[HEALTH_POTION] = GolemStat.dropRate;
	dropItems[POWER_POTION] = GolemStat.dropRate;
	bDead = false;
	
}

IronGolem::~IronGolem() {}

void IronGolem::Begin()
{
	CreateAnimations();
	Monster::animator->Play("Idle", true);
}

void IronGolem::Tick()
{
	Monster::Tick();
	if (bDead == false && Monster::animator->isCurAnimEnd()) {
		Monster::animator->Play("Idle", true);
	}
}

void IronGolem::CreateAnimations()
{
	vector<string> VecAnim01;
	VecAnim01.push_back("");
	VecAnim01.push_back("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£Ä‚£Ä‚£Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
	VecAnim01.push_back("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚°†‚°î‚¢ì‚£∫‚£Ü‚¢Ä‚£§‚£¥‚£∑‚£æ‚†É‚†à‚†π‚†∑‚£≥‚¢æ‚£§‚£§‚°Ä‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
	VecAnim01.push_back("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£†‚†î‚†é‚†â‚£§‚¢∂‚°π‚£∫‚£è‚¢è‚£∂‚£ª‚¢æ‚£Ω‚†É‚†Ä‚†Ä‚†Ä‚°Å‚¢è‚†ñ‚£ß‚¢ª‚£õ‚£∑‚°Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
	VecAnim01.push_back("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚°ü‚†Ä‚°Ä‚£∞‚°û‚¢ß‚£ã‚†∂‚£π‚£ø‚†æ‚£æ‚£Ω‚£∑‚£ø‚°Å‚†Ä‚†Ä‚°∞‚†â‚†Ñ‚°ò‚†à‚†≥‚£Ω‚¢æ‚£ª‚°Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
	VecAnim01.push_back("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚°º‚£è‚£†‚£Ω‚£≥‚£ù‚°≤‚£≠‚£û‚°Ω‚†É‚¢†‚°ò‚¢≠‚°ü‚£ø‚£∑‚£Ä‚°é‚£†‚†±‚£§‚£∞‚¢≥‚¢æ‚£ü‚£Ø‚¢ü‚£∑‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
	VecAnim01.push_back("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚††‚£ø‚°Ω‚£Ø‚¢∑‚£ª‚¢æ‚°Ω‚°ó‚†ã‚†Ä‚°Ä‚¢¶‚†ò‚£Ü‚°ô‚†∂‚£≠‚¢ª‚£Ω‚£ß‚£õ‚†∂‚£°‚¢è‚°û‚£Ω‚£û‚°ø‚£æ‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
	VecAnim01.push_back("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚†¥‚†ø‚¢ø‚£Ø‚£ø‚£Ω‚°æ‚†â‚†Ä‚††‚†ê‚¢à‚†¶‚°ô‚£§‚£é‚°∑‚£û‚°ø‚£û‚£ø‚£¨‚£≥‚£≠‚£û‚£º‚£≥‚£ø‚£ø‚£ø‚£∑‚£Ä‚£Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
	VecAnim01.push_back("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚°î‚†â‚†Ä‚¢Ä‚°§‚£º‚¢Ø‚£ø‚£∑‚£ñ‚¢ß‚°§‚°¥‚£¨‚£∑‚¢ø‚°æ‚°Ω‚£Ω‚£è‚£∑‚£Ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†ü‚†£‚¢∏‚¢ß‚°ù‚£Æ‚¢π‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
	VecAnim01.push_back("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∞‚£ç‚£§‚°∞‚£å‚£∂‚°ø‚¢Ø‚£ü‚£æ‚£ª‚†ü‚†≥‚£û‚°µ‚£´‚¢æ‚£õ‚£æ‚£Ω‚£∑‚£ø‚£æ‚£ø‚£ø‚£ª‚£æ‚†õ‚†ã‚††‚†Å‚†é‚¢é‚°∑‚£ä‚¢∑‚£ª‚°¶‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
	VecAnim01.push_back("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚¢ø‚°≤‚£Ω‚°ò‚£Ø‚¢ø‚£ª‚†æ‚£µ‚£ª‚£¶‚†Ä‚†à‚†∑‚£ø‚£æ‚£ø‚°ø‚£ü‚£ø‚£ª‚£Ø‚£∑‚°ø‚†ü‚†Ä‚†Ä‚††‚†°‚£å‚£≤‚£ü‚£∂‚£≠‚£ü‚£≥‚£è‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
	VecAnim01.push_back("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚£∑‚°£‚°ù‚£¨‚¢ø‚£Ω‚£ª‚£≥‚¢Ø‚°ø‚£¥‚£ø‚°æ‚£ü‚£Ø‚£ü‚£ø‚°ø‚£ü‚£ø‚£ø‚£ø‚†Å‚†Ç‚†Ä‚£†‚¢£‚°ø‚£º‚¢∑‚£ª‚°Ω‚¢æ‚£π‚†ø‚†É‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
	VecAnim01.push_back("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢π‚°∑‚°ú‚£ß‚¢ª‚°æ‚£Ω‚£Ø‚£ø‚£ø‚£∑‚£ø‚£ø‚£ª‚°ø‚£Ω‚£ø‚£ø‚°ø‚£ø‚£Ω‚†Ç‚£Ñ‚£¥‚£ª‚¢Ø‚¢ø‚£Ω‚£´‚¢∑‚£ø‚†õ‚†â‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
	VecAnim01.push_back("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ø‚£π‚£ñ‚£ø‚£ø‚£ü‚£∑‚£ø‚£≥‚£ø‚£ø‚£Ø‚£ø‚°ø‚†ã‚†ô‚¢ø‚£ø‚£Ω‚£ø‚£ø‚£ü‚£æ‚°Ω‚£Ø‚£ø‚£∂‚£ø‚£ß‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
	VecAnim01.push_back("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ô‚†õ‚¢ø‚£ø‚£ª‚£ø‚£æ‚£ø‚£ø‚£ª‚£∑‚£ø‚°á‚†Ä‚†Ä‚†Ä‚†ô‚†ø‚£ø‚£æ‚£ø‚†ø‚£ø‚£ø‚£ü‚£ø‚£Ω‚¢ø‚£∑‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
	VecAnim01.push_back("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†â‚†â‚†ô‚†õ‚†õ‚†õ‚†õ‚†õ‚†û‚†ì‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†â‚†â‚†Ä‚†õ‚†õ‚†õ‚†õ‚†õ‚†õ‚†õ‚†Ç‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");


	vector<string> VecAnim02;
	VecAnim02.push_back("");
	VecAnim02.push_back("");
	VecAnim02.push_back("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚††‚£§‚¢§‚°Ñ‚†Ä‚¢Ä‚£†‚£§‚£¥‚°ì‚†ö‚¢∂‚£¶‚£§‚£§‚¢Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
	VecAnim02.push_back("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£Ä‚°§‚†≤‚¢â‚£°‚¢¥‚£∫‚°∑‚¢∂‚¢´‚¢ø‚£Ω‚£ª‚†Ñ‚†Ä‚†Ä‚†Ä‚†õ‚°º‚£´‚¢ü‚°∑‚¢∂‚£Ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
	VecAnim02.push_back("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚°¥‚†â‚†Å‚¢Ä‚£¥‚¢´‚†û‚£•‚¢ª‚£∑‚£≠‚£ª‚£ü‚£Æ‚£ø‚†Ç‚†Ä‚†Ä‚¢†‚†ì‚†Ñ‚†°‚†õ‚£º‚¢£‚£ø‚£ó‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
	VecAnim02.push_back("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£∏‚°ó‚¢†‚¢¨‚£ü‚°é‚¢ß‚£õ‚£¨‚°ª‚†ü‚†Ä‚†ª‚£ü‚£ø‚£ø‚£•‚†Ä‚°ê‚¢Ç‚†°‚°à‚¢ê‚£§‚£§‚£ø‚£ª‚£û‚£ß‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
	VecAnim02.push_back("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ê‚£ø‚£º‚¢æ‚£ü‚°æ‚£Ω‚£≥‚£Ω‚†ñ‚†â‚†Ä‚°∏‚°ë‚°å‚†∂‚£π‚¢è‚°ø‚£∂‚£ß‚¢≥‚°ù‚£è‚†∂‚£©‚£∑‚£ü‚°æ‚£Ω‚£ß‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
	VecAnim02.push_back("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£®‚£ø‚£æ‚£ª‚¢æ‚£Ω‚£≥‚†Ø‚†Å‚¢Ä‚††‚†ë‚°¥‚†±‚¢å‚†≥‚£å‚°ø‚£º‚¢Ø‚£ø‚†≥‚°º‚£å‚£≥‚¢ì‚°æ‚£Ω‚£ø‚£Ω‚°ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
	VecAnim02.push_back("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚†í‚†Å‚†Ä‚†ô‚¢õ‚£ø‚£æ‚£ß‚¢§‚°Ñ‚¢Ä‚£Ä‚†∏‚£¥‚°Ω‚£û‚°ø‚£Ω‚£ª‚£≠‚£ü‚£ø‚£ø‚£∑‚£ø‚£ø‚°ø‚†ü‚¢ª‚£ù‚£ª‚£õ‚¢∑‚£æ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
	VecAnim02.push_back("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚°ñ‚¢Å‚††‚£Ä‚£ú‚£ø‚£ª‚†∑‚£Ø‚£ø‚£∑‚£Ø‚£õ‚°º‚£õ‚£Ø‚¢ø‚£ù‚£Ø‚¢∑‚£ª‚£º‚£ø‚£ø‚¢ø‚£ª‚£ø‚†ü‚†â‚†Ñ‚°©‚¢û‚¢∂‚°©‚¢û‚°ø‚£Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
	VecAnim02.push_back("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†∏‚¢Ø‚£è‚¢∑‚°π‚¢æ‚°∑‚£Ø‚£ü‚¢∑‚£ª‚£Ñ‚†Ä‚†ª‚£º‚£ß‚£õ‚£Ø‚£æ‚£ø‚£ø‚£ø‚°ø‚£ü‚£ø‚°ø‚†ã‚†Ä‚††‚°à‚†ê‚£Ñ‚£Ø‚¢∂‚°π‚£æ‚°Ω‚£ß‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
	VecAnim02.push_back("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ô‚£æ‚¢é‚°µ‚¢´‚£ü‚°∑‚£û‚£Ø‚¢∑‚£ø‚¢Ä‚£§‚£¨‚£ø‚¢ø‚°ø‚£ø‚£∑‚°ø‚£∑‚£ø‚£ø‚¢ã‚†ê‚†Ä‚†Ä‚¢Ü‚£±‚£ª‚£º‚¢Ø‚£ü‚°∑‚£Ø‚£ü‚†ß‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
	VecAnim02.push_back("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ô‚¢æ‚£ò‚°≥‚£û‚°ø‚£Ω‚£û‚°ø‚£æ‚£ø‚£ø‚£Ø‚£ü‚£ø‚£ü‚£ø‚£æ‚£ø‚£ø‚£ø‚£ª‚†Ñ‚†Ä‚¢†‚£Ω‚°æ‚¢Ø‚°∑‚¢Ø‚£ü‚°æ‚£Ω‚†ì‚†ã‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
	VecAnim02.push_back("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ò‚£∑‚°π‚¢¶‚£Ω‚£∑‚£ø‚£ª‚£ø‚£Ω‚£ø‚£ø‚£ª‚£ø‚£æ‚†ø‚†æ‚£ø‚£∑‚£ü‚£ø‚£¥‚£ü‚°ø‚£û‚°Ω‚£Ø‚£ü‚£ø‚£û‚°ô‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
	VecAnim02.push_back("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†ª‚†ø‚£ø‚£Ø‚£ø‚£∑‚£ø‚£æ‚£ø‚£ü‚£ø‚£æ‚°è‚†Ä‚†Ä‚†â‚¢≥‚£ø‚£ø‚£ø‚¢ø‚£ø‚£Ω‚£ø‚°ø‚£ø‚£ª‚°ø‚£∑‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
	VecAnim02.push_back("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ô‚†õ‚†õ‚†õ‚†õ‚†õ‚†õ‚†õ‚†õ‚†õ‚†á‚†Ä‚†Ä‚†Ä‚†Ä‚†â‚†ô‚†õ‚†ª‚†â‚†õ‚†õ‚†õ‚†õ‚†õ‚†õ‚†ª‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");

	vector<vector<string>> AnimInfo;
	AnimInfo.push_back(VecAnim01);
	AnimInfo.push_back(VecAnim02);
	Monster::animator->CreateAnimation("Idle", AnimInfo, 2, 0.25f);

	vector<string> VecAnim03;
	VecAnim03.push_back("");
	VecAnim03.push_back("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚†¶‚¢¥‚£§‚£Ä‚£Ä‚£Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
	VecAnim03.push_back("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°Ä‚¢Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£∏‚†Ñ‚†Ä‚†ò‚†â‚†ø‚£π‚†∂‚°∑‚£§‚£§‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
	VecAnim03.push_back("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£Ñ‚†≤‚¢ä‚£©‚¢Ω‚°É‚£†‚°∞‚¢∂‚°ø‚£ø‚†Ä‚†Ä‚†Ä‚£Ä‚†≤‚¢â‚†ö‚°µ‚£´‚¢∂‚£ø‚°Ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
	VecAnim03.push_back("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£Ä‚†∂‚†ò‚†É‚£Ä‚£∂‚¢´‚£ú‚†ª‚°ü‚£°‚¢è‚£∑‚£ª‚¢ø‚£Ä‚†Ä‚¢†‚†Ç‚£Å‚†Ç‚¢Ñ‚£Ä‚£°‚£ø‚£û‚°ø‚£Ö‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
	VecAnim03.push_back("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚°á‚¢Ä‚°∞‚£º‚£ô‚†¶‚£è‚°º‚†ü‚†ª‚£ø‚£ø‚£æ‚£ü‚£ø‚£ø‚£∞‚¢•‚°≤‚£¥‚¢∫‚°ú‚£≠‚¢õ‚£∑‚¢Ø‚£ª‚¢ø‚£Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
	VecAnim03.push_back("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∞‚£è‚¢Ø‚£¥‚£ª‚¢ß‚£ù‚°æ‚°ú‚†â‚†Ä‚¢≤‚°ë‚¢æ‚°π‚¢ø‚¢ø‚£ø‚£ø‚£é‚¢∑‚¢£‚£ì‚†û‚°¥‚£´‚¢ü‚£Ø‚£Ø‚£ø‚¢ø‚£∑‚£Ñ‚°Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
	VecAnim03.push_back("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£∏‚£Ø‚°ø‚£ù‚£Ø‚£ü‚°æ‚†Å‚†Ä‚¢†‚¢â‚†ñ‚°∏‚†§‚°ô‚¢è‚°æ‚£Ω‚£ª‚£ø‚£ø‚£∂‚£ø‚£æ‚£∑‚£ø‚£æ‚†ü‚†è‚†à‚†ì‚¢Æ‚°π‚¢ø‚£Ö‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
	VecAnim03.push_back("‚†Ä‚†Ä‚†Ä‚†Ä‚£Ä‚£§‚£¥‚°ø‚£ø‚¢ø‚£ø‚£ø‚£û‚†É‚¢Ä‚†Ä‚†à‚†Ä‚£é‚°ú‚£±‚£Æ‚£Ω‚£ª‚£Ω‚°≥‚£ø‚£ø‚£ü‚£ø‚°ø‚£ø‚£ø‚†ü‚†Ä‚†Ä‚†Ñ‚¢ä‚£ú‚£∂‚¢ø‚£≠‚£ø‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
	VecAnim03.push_back("‚†Ä‚†Ä‚†Ä‚°é‚†â‚°Ω‚£±‚£û‚£¥‚£è‚¢æ‚£ø‚£ø‚£ø‚°≠‚£ñ‚¢Æ‚°≥‚£æ‚£ª‚°Ω‚£û‚£≥‚°Ω‚£∂‚£ø‚£Ω‚£ø‚£ø‚£Ø‚£ø‚°ø‚†â‚†Ä‚†Ä‚¢∞‚£¨‚¢æ‚°Ω‚£û‚£ø‚¢∫‚°∑‚£è‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
	VecAnim03.push_back("‚†Ä‚¢Ä‚†õ‚†Ä‚£º‚£≥‚£ü‚£æ‚£ø‚°æ‚£Ø‚£ø‚£∑‚†è‚†ô‚†Ø‚£û‚°µ‚£´‚¢∑‚£ª‚£Ω‚£∑‚£ø‚£ø‚°ø‚£ü‚£ø‚£æ‚£ø‚£ü‚£ø‚£Å‚†Ä‚£∏‚¢Ø‚£ü‚£Ø‚£Ω‚¢ª‚£º‚°ø‚†â‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
	VecAnim03.push_back("‚††‚°ú‚¢°‚°ò‚£æ‚°∑‚£ø‚£ü‚£æ‚£ø‚¢ø‚°ü‚†Ä‚¢†‚£§‚£¥‚£ø‚¢ø‚°ø‚£ø‚£ø‚£ª‚£Ω‚°ø‚£∑‚£ø‚£ø‚£ø‚£ø‚£≥‚£ø‚¢Ø‚£ø‚£æ‚¢Ø‚£ü‚°æ‚£µ‚†ü‚†õ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
	VecAnim03.push_back("‚†®‚£á‚£¶‚°ø‚£Ω‚¢ø‚£Ø‚£ø‚£ø‚£æ‚†ã‚†Ä‚†Ä‚£ø‚£ø‚£ª‚£æ‚°ø‚£ø‚£ª‚£∑‚£ø‚£Ø‚£ø‚£ø‚£Ω‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£æ‚£Ø‚°â‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
	VecAnim03.push_back("‚†Ä‚†ò‚†ª‚†ø‚†ª‚†ø‚†é‚†â‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†ò‚¢∑‚£ø‚£ª‚£Ω‚£ü‚£ø‚†û‚†â‚†â‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ô‚¢Ø‚£ø‚°ø‚£ø‚£ü‚£ø‚£ü‚£ø‚£ø‚£§‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
	VecAnim03.push_back("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£¥‚£ø‚£ø‚£ª‚£ü‚£ø‚£ª‚£ß‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ô‚†õ‚†ª‚£ø‚£Ω‚£æ‚¢ø‚£Ω‚°ø‚£∑‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
	VecAnim03.push_back("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ü‚†õ‚†õ‚†õ‚†õ‚†õ‚†õ‚†á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†õ‚†õ‚†õ‚†õ‚†õ‚†õ‚†ª‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");

	AnimInfo.clear();
	AnimInfo.push_back(VecAnim03);
	Monster::animator->CreateAnimation("Attack", AnimInfo, 1, 0.25f);

	vector<string> VecAnim04;
	VecAnim04.push_back("");
	VecAnim04.push_back("");
	VecAnim04.push_back("");
	VecAnim04.push_back("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£†‚°¥‚£∂‚£∂‚£§‚£Ä‚£Ñ‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
	VecAnim04.push_back("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚°†‚†¶‚†ô‚£ø‚°ü‚°±‚£é‚£∑‚£ª‚£û‚°è‚†à‚†π‚£≥‚£§‚£Ä‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
	VecAnim04.push_back("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚°†‚°î‚†ö‚†Å‚°Å‚£¥‚†ª‚£ù‚£∑‚£Ø‚£Ω‚£æ‚£≥‚£Ø‚†è‚†Ä‚†Ä‚†Ä‚¢´‚£ù‚°≥‚¢∑‚£Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
	VecAnim04.push_back("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£≤‚°â‚†Ä‚†Ä‚°Ä‚¢¶‚°ü‚£≠‚¢õ‚°¥‚£ø‚†ã‚†ô‚°ø‚¢ø‚£ø‚†Ä‚°Ä‚¢§‚†ò‚†¢‚†ò‚£π‚†≥‚£û‚°ª‚£¶‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
	VecAnim04.push_back("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£Ω‚°π‚£ñ‚¢§‚£ü‚£ø‚£∏‚¢∂‚°ª‚†û‚†Ä‚¢Ä‚°π‚¢à‚†ª‚£ú‚°ª‚¢ø‚£∂‚£¨‚£Ä‚£Å‚£Ä‚£π‚°æ‚£µ‚¢ø‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
	VecAnim04.push_back("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢æ‚£∑‚£π‚¢æ‚£ª‚¢æ‚°Ω‚†õ‚†Å‚¢Ä‚†ê‚£å‚†≤‚£â‚†ñ‚£¨‚¢π‚°∑‚¢æ‚£Ω‚°ß‚¢´‚°ç‚£ø‚°Ω‚£Ø‚¢ø‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
	VecAnim04.push_back("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∞‚£ø‚£∑‚£Ø‚£ø‚£Ω‚£Ø‚£Å‚£†‚†Ä‚¢Ä‚°Ä‚¢¶‚£≥‚£ú‚°æ‚£Ω‚¢Ø‚£ü‚£ü‚£æ‚£Ø‚£≥‚£ú‚¢ß‚£ø‚°Ω‚£æ‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
	VecAnim04.push_back("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£æ‚†ü‚£ø‚£ü‚£Ø‚£ø‚£ø‚£ø‚£ß‚£õ‚¢ß‚£õ‚¢ø‚°Ω‚£æ‚°Ω‚£õ‚£æ‚£Ω‚£æ‚£ø‚£ø‚£ø‚£ø‚†ª‚†ü‚†ø‚£ª‚£ø‚£¶‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
	VecAnim04.push_back("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°§‚†ã‚†∞‚£ø‚¢æ‚°Ω‚£≥‚£ü‚¢ø‚£ª‚£ø‚£Æ‚£ù‚£æ‚£π‚£∑‚£ø‚°ø‚°ø‚†ü‚†õ‚†õ‚†Å‚†Ä‚††‚†ê‚°à‚¢¥‚££‚¢ü‚£Ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
	VecAnim04.push_back("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†∞‚°ç‚†Ä‚¢Ä‚†ë‚°∏‚¢ü‚£Ω‚£≥‚¢Ø‚£ü‚£Ø‚£∑‚£ø‚¢ø‚£ø‚£ø‚£ø‚°ø‚£∑‚°ñ‚†à‚†Ä‚†Ä‚¢Ä‚°§‚£•‚£¶‚£π‚¢é‚†ß‚£Ø‚°º‚†É‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
	VecAnim04.push_back("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ò‚¢¶‚£Ä‚†Æ‚£ù‚°é‚¢∂‚°π‚£è‚£ø‚°ø‚£Ω‚£æ‚°ø‚¢ø‚£ø‚°æ‚£ü‚£ø‚£ø‚°ø‚£ø‚£ª‚¢Ø‚°ø‚£Ω‚£≥‚¢ø‚£ã‚£æ‚†ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
	VecAnim04.push_back("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ò‚¢ª‚†Æ‚£Ω‚£≤‚°π‚¢é‚°ø‚£ø‚¢ø‚£∑‚†õ‚†Ä‚†ò‚¢ø‚£ø‚°ø‚£Ω‚£ª‚°µ‚£Ø‚£ü‚£æ‚£≥‚£Ø‚£ø‚£ø‚£ø‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
	VecAnim04.push_back("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†â‚†ü‚†õ‚†≥‚†õ‚†õ‚†ã‚†Ä‚†Ä‚†Ä‚†Ä‚†â‚†ô‚†≥‚†õ‚†õ‚†ã‚†â‚†â‚†ü‚†õ‚†õ‚†õ‚†≥‚†ã‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");


	AnimInfo.clear();
	AnimInfo.push_back(VecAnim04);
	Monster::animator->CreateAnimation("GetAttack", AnimInfo, 1, 0.25f);

	vector<string> VecAnim05;
	VecAnim05.push_back("");
	VecAnim05.push_back("");
	VecAnim05.push_back("");
	VecAnim05.push_back("");
	VecAnim05.push_back("");
	VecAnim05.push_back("");
	VecAnim05.push_back("");
	VecAnim05.push_back("");
	VecAnim05.push_back("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚†§‚†ö‚¢¶‚°Ä‚†Ä‚†Ä‚¢Ä‚†Ä‚£§‚£§‚£∂‚£∑‚£æ‚£§‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
	VecAnim05.push_back("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚†é‚†Å‚£§‚¢ã‚°∞‚£π‚¢∑‚£∂‚£ø‚£ø‚¢ø‚£ø‚£û‚£∑‚°ø‚£Ω‚£ß‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
	VecAnim05.push_back("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£º‚¢ã‚£∂‚°æ‚£ç‚£û‚£±‚£è‚¢æ‚£ª‚£Ω‚£ö‚†¶‚†õ‚†ª‚¢ø‚£ø‚£ü‚£æ‚£•‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
	VecAnim05.push_back("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£†‚°ü‚†ô‚†ö‚£≥‚£û‚°é‚†ë‚†Ä‚†Ä‚£†‚¢æ‚°Ω‚£ß‚†Ä‚†Ä‚†Ä‚¢ã‚°ø‚†ª‚¢Ω‚£ß‚°Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
	VecAnim05.push_back("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£¥‚†ã‚¢Å‚†Ä‚£¶‚£Ω‚£ø‚£ø‚£∂‚£¥‚°û‚£ª‚¢ß‚£ø‚°π‚£ø‚£∂‚£û‚°õ‚†§‚°Å‚¢å‚°æ‚£ø‚£Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
	VecAnim05.push_back("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚†î‚¢É‚£à‚£Ø‚£ü‚£æ‚£Ω‚£ü‚£æ‚£ø‚£∑‚°ø‚£Ω‚°ø‚£Ω‚£ª‚£ü‚£ø‚°ø‚£Ö‚°¥‚£ª‚£ø‚£Ω‚£≥‚¢ø‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
	VecAnim05.push_back("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ò‚†ø‚£û‚£ø‚£ø‚°Ω‚£ª‚£æ‚£ø‚£ü‚£æ‚£ø‚£ø‚£ß‚£ü‚£∑‚£ª‚°æ‚£ø‚£π‚°Ω‚£≥‚£Ω‚£ª‚£∑‚£Ø‚£ø‚†á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
	VecAnim05.push_back("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ô‚†õ‚†õ‚†≥‚†õ‚†õ‚†õ‚†õ‚†õ‚†õ‚†õ‚†õ‚†û‚†õ‚†≥‚†õ‚†≥‚†õ‚†õ‚†õ‚†õ‚†õ‚†õ‚†ã‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");

	AnimInfo.clear();
	AnimInfo.push_back(VecAnim05);
	Monster::animator->CreateAnimation("Die", AnimInfo, 1, 0.25f);
}	

double IronGolem::UseSkill()
{
	WriteManager::GetInstance()->AddLine(FMessageParam(LAYOUT_TYPE::STORY, GetName() + "Í∞Ä Ïä§ÌÇ¨ÏùÑ ÏÇ¨Ïö©Ìï©ÎãàÎã§!!!!", true, 0, TEXT_COLOR_TYPE::RED_INENSITY));
	return GetDamage() * GetSkillDamage();
}

void IronGolem::Attack()
{
	Monster::animator->Play("Attack", false);
	//Ïä§ÌÇ¨ Ïì∏ÌôïÎ•†
	int skillProbability = 10;
	RandomManager::GetInstance()->setRange(0, 100);
	double Trigger = double(playerLevel * RandomManager::GetInstance()->getRandom<int>());
	//Ïä§ÌÇ¨ÏùÑ Ïì∞Î©¥

	if (Trigger < skillProbability) {
		double	damage = UseSkill() - Player::getInstance()->GetDefense();
		int		probability = Player::getInstance()->GetEvasion();
		int		trigger = rand() % 100;
		if (probability < trigger) {
			Player::getInstance()->GetAttack(damage);
			WriteManager::GetInstance()->AddLine(FMessageParam(LAYOUT_TYPE::STORY, "Ïä§ÌÇ¨ Í≥µÍ≤© ÌûàÌä∏!", true, 0, TEXT_COLOR_TYPE::RED_INENSITY));
			WriteManager::GetInstance()->AddLine(FMessageParam(LAYOUT_TYPE::STORY, "Îç∞ÎØ∏ÏßÄ " + to_string(int(damage)) + "Î∞õÏïòÏäµÎãàÎã§!!!.", true, 0, TEXT_COLOR_TYPE::RED));
		}
		else {
			WriteManager::GetInstance()->AddLine(FMessageParam(LAYOUT_TYPE::STORY, "Ï†ÅÏùò Ïä§ÌÇ¨ Í≥µÍ≤©ÏùÑ ÌöåÌîºÌñàÏäµÎãàÎã§.", true, 0, TEXT_COLOR_TYPE::RED_INENSITY));
		}
	}
	//Ïä§ÌÇ¨ÏùÑ ÏïÑÎãà Ïì∞Î©¥
	else {
		double	damage = GetDamage() - Player::getInstance()->GetDefense();
		int		probability = Player::getInstance()->GetEvasion();
		int		trigger = rand() % 100;
		if (probability < trigger) {
			Player::getInstance()->GetAttack(damage);
			WriteManager::GetInstance()->AddLine(FMessageParam(LAYOUT_TYPE::STORY, "ÏùºÎ∞ò Í≥µÍ≤© ÌûàÌä∏! ", true, 0, TEXT_COLOR_TYPE::RED_INENSITY));
			WriteManager::GetInstance()->AddLine(FMessageParam(LAYOUT_TYPE::STORY, "Îç∞ÎØ∏ÏßÄ " + to_string(int(damage)) + "Î∞õÏïòÏäµÎãàÎã§!.", true, 0, TEXT_COLOR_TYPE::RED));
		}
		else { WriteManager::GetInstance()->AddLine(FMessageParam(LAYOUT_TYPE::STORY, "Ï†ÅÏùò ÏùºÎ∞ò Í≥µÍ≤©ÏùÑ ÌöåÌîºÌñàÏäµÎãàÎã§.", true, 0, TEXT_COLOR_TYPE::RED_INENSITY)); }
	}




}

void IronGolem::GetAttack()
{
	Monster::animator->Play("GetAttack", false);
	double damage = Player::getInstance()->GetDamage() - GetDefense();
	SetCurrentHP(GetCurrentHP() - damage);
	if (GetCurrentHP() <= 0) {
		SetCurrentHP(0);
	}
}

void IronGolem::DropItem() {
	for (const auto& item : dropItems) {
		RandomManager::GetInstance()->setRange(0, 100);  // 0.0 ~ 1.0 ÏÇ¨Ïù¥Ïùò ÎûúÎç§ Í∞í
		int randomChance = RandomManager::GetInstance()->getRandom<double>();
		if (randomChance <= item.second) {  // ÌôïÎ•†Ïóê ÎßûÎäî ÏïÑÏù¥ÌÖú ÎìúÎ°≠
			if (item.first == HEALTH_POTION) {
				WriteManager::GetInstance()->AddLine(FMessageParam(LAYOUT_TYPE::STORY, "Ï≤¥Î†• Ìè¨ÏÖòÏù¥ ÎìúÎûçÎêòÏóàÏäµÎãàÎã§.", true, 0, TEXT_COLOR_TYPE::GREEN));
				Player::getInstance()->AddItemToInventory(HEALTH_POTION);
			}
			else if (item.first == POWER_POTION) {
				WriteManager::GetInstance()->AddLine(FMessageParam(LAYOUT_TYPE::STORY, "ÌååÏõå Ìè¨ÏÖòÏù¥ ÎìúÎûçÎêòÏóàÏäµÎãàÎã§.", true, 0, TEXT_COLOR_TYPE::GREEN));
				Player::getInstance()->AddItemToInventory(POWER_POTION);
			}
		}
	}
}


bool IronGolem::is_Die()
{
	Monster::animator->Play("Die", false);
	if (GetCurrentHP() <= 0) {
		WriteManager::GetInstance()->AddLine(FMessageParam(LAYOUT_TYPE::STORY, "ÎãπÏã†Ïù¥"+ GetName() + "Î•º Ïì∞Îü¨Ìä∏Î†∏ÏäµÎãàÎã§!", true, 0, TEXT_COLOR_TYPE::BLUE));
		DropItem();
		bDead = true;
		return bDead;
	}
	return bDead;
}



//---------------------------------
//           GetÌï®Ïàò
//---------------------------------
const string IronGolem::GetName()
{
	return GolemStat.name;
}
const double IronGolem::GetCurrentHP()
{
	return GolemStat.currentHp;
}
const double IronGolem::GetMaxHP()
{
	return GolemStat.maxHp;
}
const double IronGolem::GetDropRate()
{
	return GolemStat.dropRate;
}

const bool IronGolem::GetbDead()
{
	return bDead;
}

const int IronGolem::GetCoin()
{
	return GolemStat.coin;
}
const int IronGolem::GetDefense()
{
	return GolemStat.defense;
}
const int IronGolem::GetExp()
{
	return GolemStat.exp;
}
const int IronGolem::GetEvasion()
{
	return GolemStat.evasion;
}

const double IronGolem::GetSkillDamage()
{
	return GolemStat.skillDamage;
}

const double IronGolem::GetDamage()
{
	return GolemStat.damage;
}
//-----------------------------//
//          SetÌï®Ïàò            //
//-----------------------------//

void IronGolem::SetCurrentHP(double hp)
{
	GolemStat.currentHp = hp;
}


